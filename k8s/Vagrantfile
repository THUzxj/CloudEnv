NUM_WORKER_NODES=1
IP_NW="10.0.0."
IP_START=10
OPENSTACK_IP=ENV["OPENSTACK_MANAGER_IP"]
# SHARED_NETWORK="192.168.233."

Vagrant.configure("2") do |config|
  config.vm.provision "shell", env: {"IP_NW" => IP_NW, "IP_START" => IP_START}, inline: <<-SHELL
      sudo sed -i "s@http://.*archive.ubuntu.com@https://mirrors.tuna.tsinghua.edu.cn@g" /etc/apt/sources.list
      sudo sed -i "s@http://.*security.ubuntu.com@https://mirrors.tuna.tsinghua.edu.cn@g" /etc/apt/sources.list
      sudo rm /etc/resolv.conf && echo "nameserver 8.8.8.8" | sudo tee /etc/resolv.conf
      apt-get update -y
      echo "$IP_NW$((IP_START)) master" >> /etc/hosts
      echo "$IP_NW$((IP_START+1)) node01" >> /etc/hosts
      echo "$IP_NW$((IP_START+2)) node02" >> /etc/hosts
  SHELL

#   config.vm.box = "generic/ubuntu2004"
#   config.vm.box_check_update = true
  config.vm.synced_folder ".", "/vagrant", type: "rsync"

  # Specify the default SSH username and private key
  config.ssh.username = "ubuntu"
  config.ssh.private_key_path = File.expand_path('~/.ssh/id_rsa')

  # Configure the OpenStack provider for Vagrant
  config.vm.provider "openstack" do |os|

    # Specify OpenStack authentication information
    os.openstack_auth_url = "http://#{OPENSTACK_IP}/identity/v3"
    os.username = "admin"
    os.password = ENV["GLOBAL_PASSWORD"]
    os.project_name = "demo"
    os.domain_name = "default"
    os.identity_api_version = "3"
    os.openstack_network_url = "http://#{OPENSTACK_IP}:9696/networking/v2.0"

    # Specify instance information
    # os.server_name = "vagrant-test"
    # os.flavor = "m1.nano"
    # os.image = "cirros-0.5.2-x86_64-disk"
    os.flavor = "kube"
    os.image = "ubuntu2"
    os.floating_ip_pool = "public"
    os.networks = "shared"
    os.public_key_path = File.expand_path("~/.ssh/id_rsa.pub")
    # os.keypair_name = "manager"
    os.security_groups = ["default", "test-group"]
  end

  config.vm.define "master" do |master|
    # master.vm.name = "master"
    # master.vm.box = "bento/ubuntu-18.04"
    # master.vm.hostname = "master-node"
    # master.vm.network "private_network", ip: IP_NW + "#{IP_START}"
    master.vm.provider :openstack do |os|
      os.networks = [
        # {
        #   name: "shared",
        #   address: SHARED_NETWORK + "#{IP_START}"
        # },
        {
          "name": "private",
          "address": IP_NW + "#{IP_START}"
        }
      ]
    end
    
    master.vm.provider "virtualbox" do |vb|
        vb.memory = 8192
        vb.cpus = 16
    end
    master.vm.provision "file", source: "./apt-key.gpg", destination: "$HOME/apt-key.gpg"
    master.vm.provision "shell", path: "scripts/common.sh"
    master.vm.provision "shell", path: "scripts/master.sh"
  end

  (1..NUM_WORKER_NODES).each do |i|

  config.vm.define "node0#{i}" do |node|
    # node.vm.name = "worker-node0#{i}"
    # node.vm.hostname = "worker-node0#{i}"
    # node.vm.network "private_network", ip: IP_NW + "#{IP_START + i}"
    node.vm.provider :openstack do |os|
      os.networks = [
        # {
        #   name: "shared",
        #   address: SHARED_NETWORK + "#{IP_START + i}"
        # },
        {
          "name": "private",
          "address": IP_NW + "#{IP_START + i}"
        }
      ]
    end

    node.vm.provider "virtualbox" do |vb|
        vb.memory = 8192
        vb.cpus = 16
    end
    node.vm.provision "file", source: "./apt-key.gpg", destination: "$HOME/apt-key.gpg"
    node.vm.provision "shell", path: "scripts/common.sh"
    node.vm.provision "shell", path: "scripts/node.sh"
  end

  end
end 
